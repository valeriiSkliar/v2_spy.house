<?php

/**
 * –§–ò–ù–ê–õ–¨–ù–´–ô –†–ê–ë–û–ß–ò–ô –í–ê–õ–ò–î–ê–¢–û–† WEBHOOK PAY2.HOUSE
 * 
 * ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
 * ‚úÖ –ì–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
 * ‚úÖ –ü–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
 */

/**
 * –û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è webhook –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ Pay2.House
 * 
 * @param string|null $data Base64 –∑–∞–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø–æ–¥–ø–∏—Å—å –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞ Pay2-House-Signature
 * @param string|null $secret_key API –∫–ª—é—á –º–µ—Ä—á–∞–Ω—Ç–∞
 * @return string|false –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–µ JSON –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ false –ø—Ä–∏ –æ—à–∏–±–∫–µ
 */
function decrypt_webhook($data = NULL, $secret_key = NULL)
{
    if (empty($data) || empty($secret_key)) {
        return FALSE;
    }

    // –®–∞–≥ 1: –î–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ Base64
    $decoded_data = base64_decode($data);
    if ($decoded_data === FALSE) {
        return FALSE;
    }

    // –®–∞–≥ 2: –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ —á–∞—Å—Ç–∏ iv|signature|encrypted_data
    $parts = explode('|', $decoded_data);
    if (count($parts) !== 3) {
        return FALSE;
    }

    list($iv, $signature, $encrypted_data) = $parts;

    // –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ HMAC –ø–æ–¥–ø–∏—Å–∏
    $calculated_signature = hash_hmac('sha256', $iv . '|' . $encrypted_data, $secret_key);
    if (!hash_equals($calculated_signature, $signature)) {
        return FALSE;
    }

    // –®–∞–≥ 4: –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ AES-256-CBC –¥–∞–Ω–Ω—ã—Ö
    $decoded_encrypted_data = openssl_decrypt(
        base64_decode($encrypted_data),
        'AES-256-CBC',
        hex2bin(hash('sha256', $secret_key)),
        0,
        hex2bin(bin2hex(hex2bin($iv)))  // –¢–æ—á–Ω–æ –∫–∞–∫ –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º –∫–æ–¥–µ!
    );

    if ($decoded_encrypted_data !== FALSE) {
        return $decoded_encrypted_data;
    }

    return FALSE;
}

/**
 * –ü–æ–ª–Ω—ã–π –≤–∞–ª–∏–¥–∞—Ç–æ—Ä webhook —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
 * 
 * @param string $signature –ü–æ–¥–ø–∏—Å—å –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞ Pay2-House-Signature
 * @param array $payload –î–∞–Ω–Ω—ã–µ –∏–∑ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞
 * @param string $api_key API –∫–ª—é—á –º–µ—Ä—á–∞–Ω—Ç–∞
 * @param bool $debug –í–∫–ª—é—á–∏—Ç—å –æ—Ç–ª–∞–¥–æ—á–Ω—ã–π –≤—ã–≤–æ–¥
 * @return array –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏
 */
function validate_pay2_webhook($signature, $payload, $api_key, $debug = false)
{
    $result = [
        'valid' => false,
        'payload_data' => null,
        'webhook_data' => null,
        'error' => null
    ];

    try {
        if ($debug) {
            echo "üîç –ù–∞—á–∏–Ω–∞—é –≤–∞–ª–∏–¥–∞—Ü–∏—é webhook Pay2.House\n";
            echo "üìù –ü–æ–¥–ø–∏—Å—å: " . substr($signature, 0, 50) . "...\n";
            echo "üì¶ Payload: " . json_encode($payload) . "\n";
            echo "üîë API –∫–ª—é—á: " . substr($api_key, 0, 20) . "...\n\n";
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        if (empty($signature)) {
            $result['error'] = '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–¥–ø–∏—Å—å Pay2-House-Signature';
            return $result;
        }

        if (empty($api_key)) {
            $result['error'] = '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç API –∫–ª—é—á';
            return $result;
        }

        // –†–∞—Å—à–∏—Ñ—Ä–æ–≤—ã–≤–∞–µ–º –ø–æ–¥–ø–∏—Å—å
        if ($debug) echo "üîê –†–∞—Å—à–∏—Ñ—Ä–æ–≤—ã–≤–∞—é –ø–æ–¥–ø–∏—Å—å...\n";

        $decrypted_webhook = decrypt_webhook($signature, $api_key);

        if ($decrypted_webhook === FALSE) {
            $result['error'] = '–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å—å webhook';
            if ($debug) echo "‚ùå –û—à–∏–±–∫–∞ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏ –ø–æ–¥–ø–∏—Å–∏\n";
            return $result;
        }

        if ($debug) echo "‚úÖ –ü–æ–¥–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–∞\n";

        // –ü–∞—Ä—Å–∏–º JSON –∏–∑ –ø–æ–¥–ø–∏—Å–∏
        $webhook_data = json_decode($decrypted_webhook, true);
        if ($webhook_data === null) {
            $result['error'] = '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç JSON –≤ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–π –ø–æ–¥–ø–∏—Å–∏';
            return $result;
        }

        if ($debug) {
            echo "üìä –î–∞–Ω–Ω—ã–µ –∏–∑ –ø–æ–¥–ø–∏—Å–∏:\n";
            foreach ($webhook_data as $key => $value) {
                echo "  $key: $value\n";
            }
            echo "\n";
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –ø–æ–¥–ø–∏—Å–∏ –∏ payload
        $required_fields = ['invoice_number', 'external_number', 'amount', 'currency_code', 'status'];

        foreach ($required_fields as $field) {
            if (!isset($payload[$field]) || !isset($webhook_data[$field])) {
                $result['error'] = "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ: $field";
                return $result;
            }

            if ($payload[$field] != $webhook_data[$field]) {
                $result['error'] = "–ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–æ–ª—è $field: payload={$payload[$field]}, webhook={$webhook_data[$field]}";
                return $result;
            }
        }

        // –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ
        $result['valid'] = true;
        $result['payload_data'] = $payload;
        $result['webhook_data'] = $webhook_data;

        if ($debug) echo "üéâ Webhook —É—Å–ø–µ—à–Ω–æ –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω!\n";

        return $result;
    } catch (Exception $e) {
        $result['error'] = '–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: ' . $e->getMessage();
        if ($debug) echo "‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: " . $e->getMessage() . "\n";
        return $result;
    }
}

/**
 * –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞
 */
function example_webhook_usage()
{

    // –°–∏–º—É–ª–∏—Ä—É–µ–º –≤—Ö–æ–¥—è—â–∏–π webhook –∑–∞–ø—Ä–æ—Å
    $headers = [
        'Pay2-House-Signature' => 'NTM5OWVlODBiZDVhZWFiNzBmZjE4YmU3MGZjMGRlNGV8ZGYwYmY0MTI2ZTgxNzYwNjA1MjM0OTI5ODRmNzQ5NjE1YTMyOTQzNjNmMDQ3NDZmZmM2NDJlYWFmOTk0NzI4OXxZMm94YTJVd1ExWXpXbTUxT1hkUVRFVm1ORU5NTDFBMllqZFJNelp4VFhOcmJtcHliR0pDZVRRelZsTk1abFp2UW0wMVJsaDRRMFpQWm5GWmNXWlFUM0l5Y1dGRVUwbGtMM2R2TVdreVdqZElURkZQVkhNMGQwY3JVVGMyU210alVYa3ZjMGRqYTJObFpuTmFhRGRrYVZodmNITklla05aVjBwNE1IUjBVa04zU1dFdmVrWkhLMFpOVEZSTVVUTlFTRWd2WlU1WE5tMVpPVTlUZEVkVmEyWldSbXRWWWs5ek9XTnpNa2RYWkRJMWNERlVVRVJYYUZSclpHVlBNbTlRY0VadFFXVXdkR0kwZDJJMVdFcEhURlI1Um1oQ05EQmpVMFp0Ukc5eFFXWjNOSGhhWm0wNUx6WTJhUzlFV1UxRmN6ZEVLMHRwWlZwWmJubFFVM2RsU0RGc1F6Um9ia3RGY1RkRkwyMDNiekZzVUdGYVdqTmtNRUphVUZCeGNDOVVVRGxOYVZZemNETkJTa1Y0TW5OT05XVlRjME5FU1ZoMlRqbG5OMVE0TDNNPQ=='
    ];

    $payload = [
        'invoice_number' => 'IN2212956367',
        'external_number' => 'TN121750056778',
        'amount' => 1,
        'handling_fee' => 0,
        'currency_code' => 'USD',
        'description' => '–û–ø–ª–∞—Ç–∞ —Ç–∞—Ä–∏—Ñ–∞ Start (month)',
        'status' => 'paid'
    ];

    $api_key = $_ENV['PAY2_API_KEY'] ?? 'YOUR_API_KEY_HERE';

    echo "üì• –í—Ö–æ–¥—è—â–∏–π webhook:\n";
    echo "üîë –ü–æ–¥–ø–∏—Å—å: " . substr($headers['Pay2-House-Signature'], 0, 50) . "...\n";
    echo "üì¶ –î–∞–Ω–Ω—ã–µ: " . json_encode($payload, JSON_UNESCAPED_UNICODE) . "\n\n";

    // –í–∞–ª–∏–¥–∏—Ä—É–µ–º webhook
    $validation_result = validate_pay2_webhook(
        $headers['Pay2-House-Signature'],
        $payload,
        $api_key,
        true  // –≤–∫–ª—é—á–∞–µ–º –æ—Ç–ª–∞–¥–∫—É
    );

    if ($validation_result['valid']) {
        echo "‚úÖ WEBHOOK –í–ê–õ–ò–î–ò–†–û–í–ê–ù –£–°–ü–ï–®–ù–û\n";
        echo "üí∞ –ü–ª–∞—Ç–µ–∂ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω: {$validation_result['webhook_data']['invoice_number']}\n";
        echo "üíµ –°—É–º–º–∞: {$validation_result['webhook_data']['amount']} {$validation_result['webhook_data']['currency_code']}\n";

        // –ó–¥–µ—Å—å –≤–∞—à–∞ –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞:
        // - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≤ –ë–î
        // - –ê–∫—Ç–∏–≤–∞—Ü–∏—è —É—Å–ª—É–≥
        // - –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π

        return ['status' => 200, 'response' => 'OK'];
    } else {
        echo "‚ùå –û–®–ò–ë–ö–ê –í–ê–õ–ò–î–ê–¶–ò–ò: {$validation_result['error']}\n";
        return ['status' => 401, 'response' => 'Invalid webhook'];
    }
}

// –ï—Å–ª–∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∫–∞–∫ —Å–∫—Ä–∏–ø—Ç
if (php_sapi_name() === 'cli') {
    echo "üî• –í–ê–õ–ò–î–ê–¢–û–† WEBHOOK PAY2.HOUSE\n";
    echo "==============================\n\n";

    example_webhook_usage();

    echo "\nüìù –ì–û–¢–û–í–û –ö –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ!\n";
}
