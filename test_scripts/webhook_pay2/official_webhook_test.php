<?php

/**
 * –¢–û–ß–ù–ê–Ø –ö–û–ü–ò–Ø –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ Pay2.House –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
 */

// –û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ Pay2.House
function decrypt_webhook($data = NULL, $secret_key = NULL)
{
    $decoded_data = base64_decode($data);

    if ($decoded_data === FALSE) {
        return FALSE;
    }

    list($iv, $signature, $encrypted_data) = explode('|', $decoded_data);
    $calculated_signature = hash_hmac('sha256', $iv . '|' . $encrypted_data, $secret_key);

    if (hash_equals($calculated_signature, $signature)) {
        $decoded_encrypted_data = openssl_decrypt(
            base64_decode($encrypted_data),
            'AES-256-CBC',
            hex2bin(hash('sha256', $secret_key)),
            0,
            hex2bin(bin2hex(hex2bin($iv)))
        );
        if ($decoded_encrypted_data !== FALSE) {
            return $decoded_encrypted_data;
        }
    }

    return FALSE;
}

// –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
$signature = "NTM5OWVlODBiZDVhZWFiNzBmZjE4YmU3MGZjMGRlNGV8ZGYwYmY0MTI2ZTgxNzYwNjA1MjM0OTI5ODRmNzQ5NjE1YTMyOTQzNjNmMDQ3NDZmZmM2NDJlYWFmOTk0NzI4OXxZMm94YTJVd1ExWXpXbTUxT1hkUVRFVm1ORU5NTDFBMllqZFJNelp4VFhOcmJtcHliR0pDZVRRelZsTk1abFp2UW0wMVJsaDRRMFpQWm5GWmNXWlFUM0l5Y1dGRVUwbGtMM2R2TVdreVdqZElURkZQVkhNMGQwY3JVVGMyU210alVYa3ZjMGRqYTJObFpuTmFhRGRrYVZodmNITklla05aVjBwNE1IUjBVa04zU1dFdmVrWkhLMFpOVEZSTVVUTlFTRWd2WlU1WE5tMVpPVTlUZEVkVmEyWldSbXRWWWs5ek9XTnpNa2RYWkRJMWNERlVVRVJYYUZSclpHVlBNbTlRY0VadFFXVXdkR0kwZDJJMVdFcEhURlI1Um1oQ05EQmpVMFp0Ukc5eFFXWjNOSGhhWm0wNUx6WTJhUzlFV1UxRmN6ZEVLMHRwWlZwWmJubFFVM2RsU0RGc1F6Um9ia3RGY1RkRkwyMDNiekZzVUdGYVdqTmtNRUphVUZCeGNDOVVVRGxOYVZZemNETkJTa1Y0TW5OT05XVlRjME5FU1ZoMlRqbG5OMVE0TDNNPQ==";
$api_key = $_ENV['PAY2_API_KEY'] ?? "YOUR_API_KEY_HERE";

// –û–∂–∏–¥–∞–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏
$expected_payload = [
    "invoice_number" => "IN2212956367",
    "external_number" => "TN121750056778",
    "amount" => 1,
    "handling_fee" => 0,
    "currency_code" => "USD",
    "description" => "–û–ø–ª–∞—Ç–∞ —Ç–∞—Ä–∏—Ñ–∞ Start (month)",
    "status" => "paid"
];

echo "üî• –¢–ï–°–¢ –û–§–ò–¶–ò–ê–õ–¨–ù–û–ì–û –ê–õ–ì–û–†–ò–¢–ú–ê PAY2.HOUSE\n";
echo "==========================================\n\n";

echo "üìù –î–∞–Ω–Ω—ã–µ:\n";
echo "–ü–æ–¥–ø–∏—Å—å: " . substr($signature, 0, 50) . "...\n";
echo "API –∫–ª—é—á: " . substr($api_key, 0, 20) . "...\n\n";

echo "üìä –û–∂–∏–¥–∞–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ:\n";
echo json_encode($expected_payload, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE) . "\n\n";

echo "üß™ –ó–∞–ø—É—Å–∫–∞—é –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é decrypt_webhook()...\n";

$result = decrypt_webhook($signature, $api_key);

if ($result !== FALSE) {
    echo "üéâ –£–°–ü–ï–•! –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º —Ä–∞–±–æ—Ç–∞–µ—Ç!\n";
    echo "üìÑ –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: $result\n\n";

    $json_data = json_decode($result, true);
    if ($json_data) {
        echo "üìä –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:\n";
        foreach ($json_data as $key => $value) {
            echo "  $key: $value\n";
        }

        // –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –æ–∂–∏–¥–∞–µ–º—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        echo "\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –æ–∂–∏–¥–∞–µ–º—ã–º –¥–∞–Ω–Ω—ã–º:\n";
        $matches = true;
        foreach ($expected_payload as $key => $expected_value) {
            if (!isset($json_data[$key]) || $json_data[$key] != $expected_value) {
                echo "  ‚ùå $key: –æ–∂–∏–¥–∞–ª–æ—Å—å '$expected_value', –ø–æ–ª—É—á–µ–Ω–æ '" . ($json_data[$key] ?? '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç') . "'\n";
                $matches = false;
            } else {
                echo "  ‚úÖ $key: —Å–æ–≤–ø–∞–¥–∞–µ—Ç\n";
            }
        }

        if ($matches) {
            echo "\nüéØ –í–°–ï –î–ê–ù–ù–´–ï –°–û–í–ü–ê–î–ê–Æ–¢! –¢–µ—Å—Ç –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!\n";
        } else {
            echo "\n‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è –≤ –¥–∞–Ω–Ω—ã—Ö\n";
        }
    } else {
        echo "‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON\n";
    }
} else {
    echo "‚ùå –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º –Ω–µ —Å–º–æ–≥ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ\n";
    echo "üîç –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n";
    echo "  - –ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á\n";
    echo "  - –î–∞–Ω–Ω—ã–µ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω—ã\n";
    echo "  - –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∞–ª–≥–æ—Ä–∏—Ç–º–∞\n";
    echo "  - –ü–æ–¥–ø–∏—Å—å –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–µ–º–æ–º—É payload\n";
}

echo "\nüèÅ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω\n";
