// –¢–∏–ø—ã –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –∫—Ä–µ–∞—Ç–∏–≤–æ–≤
interface Creative {
  id: number;
  name: string;
  category: string;
  country: string;
  file_url: string;
  preview_url?: string;
  created_at: string;
  activity_date?: string;
  advertising_networks?: string[];
  languages?: string[];
  operating_systems?: string[];
  browsers?: string[];
  devices?: string[];
  image_sizes?: string[];
  is_adult?: boolean;
}

interface CreativesFilters {
  searchKeyword?: string;
  country?: string;
  dateCreation?: string;
  sortBy?: 'creation' | 'activity';
  periodDisplay?: string;
  advertisingNetworks?: string[];
  languages?: string[];
  operatingSystems?: string[];
  browsers?: string[];
  devices?: string[];
  imageSizes?: string[];
  onlyAdult?: boolean;
  page?: number;
  perPage?: number;
}

interface CreativesResponse {
  data: Creative[];
  total: number;
  per_page: number;
  current_page: number;
  last_page: number;
  from: number;
  to: number;
}

interface ProcessedCreativesData {
  items: Creative[];
  pagination: {
    total: number;
    perPage: number;
    currentPage: number;
    lastPage: number;
    from: number;
    to: number;
  };
  meta: {
    hasSearch: boolean;
    activeFiltersCount: number;
    cacheKey: string;
  };
}

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞
interface CreativesServiceConfig {
  defaultCacheTtl: number;
  searchCacheTtl: number;
  debounceDelay: number;
  maxCacheKeyLength: number;
}

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫—Ä–µ–∞—Ç–∏–≤–∞–º–∏ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–æ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
 */
class CreativesService {
  private config: CreativesServiceConfig = {
    defaultCacheTtl: 5 * 60 * 1000, // 5 –º–∏–Ω—É—Ç
    searchCacheTtl: 30 * 1000,      // 30 —Å–µ–∫—É–Ω–¥ –¥–ª—è –ø–æ–∏—Å–∫–∞
    debounceDelay: 300,             // 300ms debounce
    maxCacheKeyLength: 20           // –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –∫–ª—é—á–∞ –∫—ç—à–∞
  };

  private loadingStates = new Map<string, boolean>();
  // private lastRequestTime = 0;

  constructor(config?: Partial<CreativesServiceConfig>) {
    if (config) {
      this.config = { ...this.config, ...config };
    }
  }

  /**
   * –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –∑–∞–≥—Ä—É–∑–∫–∏ –∫—Ä–µ–∞—Ç–∏–≤–æ–≤ —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π
   */
  async loadCreatives(filters: CreativesFilters = {}): Promise<ProcessedCreativesData> {
    console.log('üîç CreativesService.loadCreatives –≤—ã–∑–≤–∞–Ω —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏:', filters);
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
    const requestKey = this.generateRequestKey(filters);
    console.log('üîë –ö–ª—é—á –∑–∞–ø—Ä–æ—Å–∞ –≤ Service:', requestKey);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –∑–∞–ø—Ä–æ—Å
    if (this.loadingStates.get(requestKey)) {
      console.log('‚ö†Ô∏è –ó–∞–ø—Ä–æ—Å —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –æ—Ç–∫–ª–æ–Ω—è–µ–º');
      throw new Error('–ó–∞–ø—Ä–æ—Å —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è');
    }

    this.loadingStates.set(requestKey, true);
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞');

    try {
      // –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
      const processedFilters = this.preprocessFilters(filters);
      console.log('üîß –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã:', processedFilters);
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
      const cacheConfig = this.getCacheConfig(processedFilters);
      console.log('üíæ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫—ç—à–∞:', cacheConfig);
      
      // –í—ã–ø–æ–ª–Ω—è–µ–º API –∑–∞–ø—Ä–æ—Å (–±—É–¥–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —ç—Ç–∞–ø–µ)
      console.log('üì° –í—ã–∑—ã–≤–∞–µ–º makeApiRequest...');
      const response = await this.makeApiRequest(processedFilters, cacheConfig);
      console.log('üì® –û—Ç–≤–µ—Ç –æ—Ç makeApiRequest:', response);
      
      // –ü–æ—Å—Ç–æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
      const processedData = this.postprocessData(response, processedFilters);
      console.log('‚ú® –§–∏–Ω–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', processedData);
      
      return processedData;
      
    } finally {
      this.loadingStates.delete(requestKey);
      console.log('üèÅ –ó–∞–ø—Ä–æ—Å –∑–∞–≤–µ—Ä—à–µ–Ω, —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—á–∏—â–µ–Ω–æ');
    }
  }

  /**
   * –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
   */
  private preprocessFilters(filters: CreativesFilters): CreativesFilters {
    const processed: CreativesFilters = {};

    // –û—á–∏—Å—Ç–∫–∞ –ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–æ–∫ –∏ null –∑–Ω–∞—á–µ–Ω–∏–π
    Object.entries(filters).forEach(([key, value]) => {
      if (value !== '' && value !== null && value !== undefined) {
        if (Array.isArray(value)) {
          // –î–ª—è –º–∞—Å—Å–∏–≤–æ–≤ —É–±–∏—Ä–∞–µ–º –ø—É—Å—Ç—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
          const cleanArray = value.filter(item => item !== '' && item !== null);
          if (cleanArray.length > 0) {
            processed[key as keyof CreativesFilters] = cleanArray as any;
          }
        } else {
          processed[key as keyof CreativesFilters] = value;
        }
      }
    });

    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    return {
      page: 1,
      perPage: 12,
      sortBy: 'creation',
      country: 'All Categories',
      onlyAdult: false,
      ...processed
    };
  }

  /**
   * –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
   */
  private getCacheConfig(filters: CreativesFilters) {
    const hasSearch = Boolean(filters.searchKeyword && filters.searchKeyword.length > 0);
    const hasComplexFilters = this.hasComplexFilters(filters);
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è –∫—ç—à–∞
    const cacheId = `creatives-${this.generateCacheKey(filters)}`;
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º TTL –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    let ttl = this.config.defaultCacheTtl;
    if (hasSearch) {
      ttl = this.config.searchCacheTtl;
    } else if (hasComplexFilters) {
      ttl = Math.floor(this.config.defaultCacheTtl / 2); // –£–º–µ–Ω—å—à–∞–µ–º TTL –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
    }

    return {
      id: cacheId,
      cache: {
        ttl,
        methods: ['get'] as const
      }
    };
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Å–ª–æ–∂–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
   */
  private hasComplexFilters(filters: CreativesFilters): boolean {
    const complexFilterKeys = [
      'advertisingNetworks', 'languages', 'operatingSystems', 
      'browsers', 'devices', 'imageSizes'
    ];
    
    return complexFilterKeys.some(key => {
      const value = filters[key as keyof CreativesFilters];
      return Array.isArray(value) && value.length > 0;
    });
  }

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–∞ –∫—ç—à–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤
   */
  private generateCacheKey(filters: CreativesFilters): string {
    // –°–æ–∑–¥–∞–µ–º –¥–µ—Ç–µ—Ä–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É –∏–∑ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    const filterString = JSON.stringify(filters, Object.keys(filters).sort());
    
    // –°–æ–∑–¥–∞–µ–º –∫–æ—Ä–æ—Ç–∫–∏–π —Ö—ç—à
    let hash = 0;
    for (let i = 0; i < filterString.length; i++) {
      const char = filterString.charCodeAt(i);
      hash = ((hash << 5) - hash) + char;
      hash = hash & hash; // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ 32-–±–∏—Ç–Ω–æ–µ —á–∏—Å–ª–æ
    }
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π —Ö—ç—à –≤ base36 —Ñ–æ—Ä–º–∞—Ç–µ
    return Math.abs(hash).toString(36).substring(0, this.config.maxCacheKeyLength);
  }

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–∞ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤
   */
  private generateRequestKey(filters: CreativesFilters): string {
    return `request-${this.generateCacheKey(filters)}`;
  }

  /**
   * –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è API –∑–∞–ø—Ä–æ—Å–∞ (–±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —ç—Ç–∞–ø–µ)
   */
  private async makeApiRequest(filters: CreativesFilters, cacheConfig: any): Promise<CreativesResponse> {
    console.log('üéØ === makeApiRequest –í–´–ó–í–ê–ù! ===');
    console.log('üìã API –∑–∞–ø—Ä–æ—Å —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏:', filters);
    console.log('üíæ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫—ç—à–∞:', cacheConfig);
    
    // –°–∏–º—É–ª–∏—Ä—É–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É —Å–µ—Ç–∏ –¥–ª—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç–∏
    await new Promise(resolve => setTimeout(resolve, 300));
    
    // –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞ —Å –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    const mockResponse = {
      data: [],
      total: 0,
      per_page: filters.perPage || 12,
      current_page: filters.page || 1,
      last_page: 1,
      from: 0,
      to: 0
    };
    
    console.log('üì§ makeApiRequest –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç mock –æ—Ç–≤–µ—Ç:', mockResponse);
    console.log('‚úÖ === makeApiRequest –ó–ê–í–ï–†–®–ï–ù! ===');
    
    return mockResponse;
  }

  /**
   * –ü–æ—Å—Ç–æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç API
   */
  private postprocessData(response: CreativesResponse, filters: CreativesFilters): ProcessedCreativesData {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫—Ä–µ–∞—Ç–∏–≤–æ–≤
    const processedItems = response.data.map(item => ({
      ...item,
      // –î–æ–±–∞–≤–ª—è–µ–º computed —Å–≤–æ–π—Å—Ç–≤–∞
      displayName: this.generateDisplayName(item),
      isRecent: this.isRecentCreative(item),
      // TODO: –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏—Ö —ç—Ç–∞–ø–∞—Ö
      isFavorite: false
    }));

    // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
    const hasSearch = Boolean(filters.searchKeyword && filters.searchKeyword.length > 0);
    const activeFiltersCount = this.countActiveFilters(filters);
    const cacheKey = this.generateCacheKey(filters);

    return {
      items: processedItems,
      pagination: {
        total: response.total,
        perPage: response.per_page,
        currentPage: response.current_page,
        lastPage: response.last_page,
        from: response.from,
        to: response.to
      },
      meta: {
        hasSearch,
        activeFiltersCount,
        cacheKey
      }
    };
  }

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–≥–æ –∏–º–µ–Ω–∏ –∫—Ä–µ–∞—Ç–∏–≤–∞
   */
  private generateDisplayName(creative: Creative): string {
    if (creative.name) {
      return creative.name;
    }
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥—Ä—É–≥–∏—Ö –¥–∞–Ω–Ω—ã—Ö
    const parts: string[] = [];
    
    if (creative.category) {
      parts.push(creative.category);
    }
    
    if (creative.country) {
      parts.push(creative.country);
    }
    
    return parts.join(' - ') || `Creative #${creative.id}`;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∫—Ä–µ–∞—Ç–∏–≤ –Ω–µ–¥–∞–≤–Ω–∏–º
   */
  private isRecentCreative(creative: Creative): boolean {
    const createdDate = new Date(creative.created_at);
    const weekAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000);
    
    return createdDate > weekAgo;
  }

  /**
   * –ü–æ–¥—Å—á–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
   */
  private countActiveFilters(filters: CreativesFilters): number {
    let count = 0;
    
    // –ò—Å–∫–ª—é—á–∞–µ–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ –ø–æ–¥—Å—á–µ—Ç–∞
    const excludeKeys = ['page', 'perPage', 'sortBy'];
    
    Object.entries(filters).forEach(([key, value]) => {
      if (excludeKeys.includes(key)) return;
      
      if (Array.isArray(value)) {
        if (value.length > 0) count++;
      } else if (value !== '' && value !== null && value !== undefined) {
        // –ò—Å–∫–ª—é—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        if (key === 'country' && value === 'All Categories') return;
        if (key === 'onlyAdult' && value === false) return;
        
        count++;
      }
    });
    
    return count;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ª–∏ –∑–∞–ø—Ä–æ—Å
   */
  isLoading(filters?: CreativesFilters): boolean {
    if (!filters) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Ö–æ—Ç—å –æ–¥–∏–Ω –∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞–ø—Ä–æ—Å
      return this.loadingStates.size > 0;
    }
    
    const requestKey = this.generateRequestKey(filters);
    return this.loadingStates.get(requestKey) || false;
  }

  /**
   * –û—Ç–º–µ–Ω–∞ –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
   */
  cancelAllRequests(): void {
    this.loadingStates.clear();
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–∏—Å–∞
   */
  getConfig(): CreativesServiceConfig {
    return { ...this.config };
  }

  /**
   * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–∏—Å–∞
   */
  updateConfig(config: Partial<CreativesServiceConfig>): void {
    this.config = { ...this.config, ...config };
  }

  /**
   * –ü—É–±–ª–∏—á–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
   */
  public testPreprocessFilters(filters: CreativesFilters): CreativesFilters {
    return this.preprocessFilters(filters);
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–∏–ø—ã –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
export type {
  Creative,
  CreativesFilters,
  CreativesResponse, CreativesServiceConfig, ProcessedCreativesData
};

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–∏–Ω–≥–ª—Ç–æ–Ω —Å–µ—Ä–≤–∏—Å–∞
export const creativesService = new CreativesService();

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –∏–Ω—Å—Ç–∞–Ω—Å–æ–≤
export default CreativesService; 