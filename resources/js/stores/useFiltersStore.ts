// stores/useFiltersStore.ts
// –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π Store –¥–ª—è –º–æ–¥—É–ª—è –∫—Ä–µ–∞—Ç–∏–≤–æ–≤ –Ω–∞ –±–∞–∑–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –∫–æ–º–ø–æ–∑–∏—Ü–∏–æ–Ω–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
//
// üèóÔ∏è –ê–†–•–ò–¢–ï–ö–¢–£–†–ù–ê–Ø –†–û–õ–¨:
// –≠—Ç–æ—Ç Store —è–≤–ª—è–µ—Ç—Å—è —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–º —É–∑–ª–æ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –≤—Å–µ–≥–æ –º–æ–¥—É–ª—è –∫—Ä–µ–∞—Ç–∏–≤–æ–≤.
// –û–Ω –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç –∏ –∫–æ–æ—Ä–¥–∏–Ω–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É –≤—Å–µ—Ö —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–æ–∑–∞–±–ª–æ–≤.
//
// üìã –ò–ù–¢–ï–ì–†–ò–†–û–í–ê–ù–ù–´–ï –ö–û–ú–ü–û–ó–ê–ë–õ–´:
// - useCreatives          ‚Üí –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏ –∫—Ä–µ–∞—Ç–∏–≤–æ–≤ –∏ API –∑–∞–ø—Ä–æ—Å–∞–º–∏
// - useCreativesUrlSync   ‚Üí –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å URL –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏  
// - useFiltersSynchronization ‚Üí –ö–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –º–µ–∂–¥—É URL, Store –∏ API
//
// üîÑ –ü–ê–¢–¢–ï–†–ù –ü–†–û–ö–°–ò–†–û–í–ê–ù–ò–Ø:
// Store –ø—Ä–æ–∫—Å–∏—Ä—É–µ—Ç –º–µ—Ç–æ–¥—ã –∏ computed —Å–≤–æ–π—Å—Ç–≤–∞ –∏–∑ –∫–æ–º–ø–æ–∑–∞–±–ª–æ–≤, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—è
// –µ–¥–∏–Ω—ã–π API –¥–ª—è Vue –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤. –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º –Ω–µ –∑–Ω–∞—Ç—å –æ
// –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ –∏ —Ä–∞–±–æ—Ç–∞—Ç—å —á–µ—Ä–µ–∑ –ø—Ä–æ—Å—Ç–æ–π interface.
//
// üéØ –ò–°–ü–û–õ–¨–ó–£–ï–¢–°–Ø –í:
// - PaginationComponent.vue     ‚Üí –ü–∞–≥–∏–Ω–∞—Ü–∏—è –∫—Ä–µ–∞—Ç–∏–≤–æ–≤
// - CreativesListComponent.vue  ‚Üí –°–ø–∏—Å–æ–∫ –∫—Ä–µ–∞—Ç–∏–≤–æ–≤  
// - FiltersComponent.vue        ‚Üí –§–∏–ª—å—Ç—Ä—ã –∫—Ä–µ–∞—Ç–∏–≤–æ–≤
// - TabsComponent.vue           ‚Üí –í–∫–ª–∞–¥–∫–∏ –∫—Ä–µ–∞—Ç–∏–≤–æ–≤
//
// üìä –£–ü–†–ê–í–õ–Ø–ï–ú–û–ï –°–û–°–¢–û–Ø–ù–ò–ï:
// - filters: FilterState        ‚Üí –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤—Å–µ—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
// - tabs: TabsState            ‚Üí –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫ –∏ –∏—Ö —Å—á–µ—Ç—á–∏–∫–æ–≤
// - selectOptions              ‚Üí –û–ø—Ü–∏–∏ –¥–ª—è dropdown —Å–µ–ª–µ–∫—Ç–æ–≤
// - translations               ‚Üí –ü–µ—Ä–µ–≤–æ–¥—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
//
// üîó URL –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø:
// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ —Å URL –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
// —á–µ—Ä–µ–∑ –ø—Ä–µ—Ñ–∏–∫—Å 'cr_' (–Ω–∞–ø—Ä–∏–º–µ—Ä: cr_country, cr_page, cr_activeTab)
//
// ‚ö° –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–¨:
// - Debounced –æ–ø–µ—Ä–∞—Ü–∏–∏ –¥–ª—è URL —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
// - –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ API –∑–∞–ø—Ä–æ—Å–æ–≤
// - Reactive updates —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Ä–µ–∞–ª—å–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö

import { useCreatives } from '@/composables/useCreatives';
import { useCreativesUrlSync } from '@/composables/useCreativesUrlSync';
import { useFiltersSynchronization } from '@/composables/useFiltersSynchronization';
import type {
  FilterOption,
  FilterState,
  TabOption,
  TabsState,
  TabValue
} from '@/types/creatives';
import { defineStore } from 'pinia';
import { computed, reactive, ref } from 'vue';

export const useCreativesFiltersStore = defineStore('creativesFilters', () => {
  // ============================================================================
  // –°–û–°–¢–û–Ø–ù–ò–ï
  // ============================================================================
  
  // –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const defaultFilters: FilterState = {
    isDetailedVisible: false,
    searchKeyword: '',
    country: 'default',
    dateCreation: 'default',
    sortBy: 'default',
    periodDisplay: 'default',
    advertisingNetworks: [],
    languages: [],
    operatingSystems: [],
    browsers: [],
    devices: [],
    imageSizes: [],
    onlyAdult: false,
    savedSettings: [],
    perPage: 12,
  };

  // –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤–∫–ª–∞–¥–æ–∫
  const defaultTabs: TabsState = {
    activeTab: 'push',
    availableTabs: ['push', 'inpage', 'facebook', 'tiktok'],
    tabCounts: {
      push: '170k',
      inpage: '3.1k',
      facebook: '65.1k',
      tiktok: '45.2m'
    }
  };

  // –†–µ–∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  const filters = reactive<FilterState>({ ...defaultFilters });
  const tabs = reactive<TabsState>({ ...defaultTabs });
  const isInitialized = ref(false);
  const translations = ref<Record<string, string>>({});
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
  const favoritesCount = ref<number | undefined>(undefined);
  const favoritesItems = ref<number[]>([]);
  const isFavoritesLoading = ref(false);

  // –û–ø—Ü–∏–∏ –¥–ª—è —Å–µ–ª–µ–∫—Ç–æ–≤
  const countryOptions = ref<FilterOption[]>([{ value: 'default', label: '–í—Å–µ —Å—Ç—Ä–∞–Ω—ã' }]);
  const sortOptions = ref<FilterOption[]>([{ value: 'default', label: '–ü–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è' }]);
  const dateRanges = ref<FilterOption[]>([{ value: 'default', label: '–í—Å—è –∏—Å—Ç–æ—Ä–∏—è' }]);

  // –û–ø—Ü–∏–∏ –¥–ª—è –º—É–ª—å—Ç–∏—Å–µ–ª–µ–∫—Ç–æ–≤
  const multiSelectOptions = reactive<{
    advertisingNetworks: FilterOption[];
    languages: FilterOption[];
    operatingSystems: FilterOption[];
    browsers: FilterOption[];
    devices: FilterOption[];
    imageSizes: FilterOption[];
  }>({
    advertisingNetworks: [],
    languages: [],
    operatingSystems: [],
    browsers: [],
    devices: [],
    imageSizes: [],
  });

  // ============================================================================
  // –ö–û–ú–ü–û–ó–ê–ë–õ–´ - –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –°–ü–ï–¶–ò–ê–õ–ò–ó–ò–†–û–í–ê–ù–ù–û–ô –õ–û–ì–ò–ö–ò
  // ============================================================================
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–∑–∞–±–ª—ã –≤ —Å—Ç—Ä–æ–≥–æ–º –ø–æ—Ä—è–¥–∫–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:
  
  // 1Ô∏è‚É£ –ë–∞–∑–æ–≤—ã–π –∫–æ–º–ø–æ–∑–∞–±–ª –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API –∫—Ä–µ–∞—Ç–∏–≤–æ–≤
  const creativesComposable = useCreatives();
  
  // 2Ô∏è‚É£ URL —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–∏–ø–æ–≤ –∫—Ä–µ–∞—Ç–∏–≤–æ–≤)
  const urlSync = useCreativesUrlSync();
  
  // 3Ô∏è‚É£ –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ (—Å–≤—è–∑—ã–≤–∞–µ—Ç –≤—Å–µ –≤–æ–µ–¥–∏–Ω–æ)
  const filtersSync = useFiltersSynchronization(
    filters,              // –†–µ–∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∏–∑ Store
    tabs,                 // –†–µ–∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫ –∏–∑ Store  
    urlSync,              // URL —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
    creativesComposable   // API –∏ –¥–∞–Ω–Ω—ã–µ –∫—Ä–µ–∞—Ç–∏–≤–æ–≤
  );

  // ============================================================================
  // COMPUTED –°–í–û–ô–°–¢–í–ê
  // ============================================================================
  
  // –û–ø—Ü–∏–∏ –¥–ª—è –º—É–ª—å—Ç–∏—Å–µ–ª–µ–∫—Ç–æ–≤ (computed)
  const advertisingNetworksOptions = computed(() => multiSelectOptions.advertisingNetworks);
  const languagesOptions = computed(() => multiSelectOptions.languages);
  const operatingSystemsOptions = computed(() => multiSelectOptions.operatingSystems);
  const browsersOptions = computed(() => multiSelectOptions.browsers);
  const devicesOptions = computed(() => multiSelectOptions.devices);
  const imageSizesOptions = computed(() => multiSelectOptions.imageSizes);

  // –û–ø—Ü–∏–∏ –¥–ª—è –≤–∫–ª–∞–¥–æ–∫
  const tabOptions = computed((): TabOption[] => {
    return tabs.availableTabs.map(tabValue => ({
      value: tabValue,
      label: getTranslation(`tabs.${tabValue}`, tabValue),
      count: tabs.tabCounts[tabValue] || 0
    }));
  });

  const currentTabOption = computed((): TabOption | undefined => {
    return tabOptions.value.find(tab => tab.value === tabs.activeTab);
  });

  // –ï—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
  const hasActiveFilters = computed(() => {
    return filters.searchKeyword !== '' ||
           filters.country !== 'default' ||
           filters.dateCreation !== 'default' ||
           filters.sortBy !== 'default' ||
           filters.periodDisplay !== 'default' ||
           filters.advertisingNetworks.length > 0 ||
           filters.languages.length > 0 ||
           filters.operatingSystems.length > 0 ||
           filters.browsers.length > 0 ||
           filters.devices.length > 0 ||
           filters.imageSizes.length > 0 ||
           filters.onlyAdult ||
           filters.savedSettings.length > 0;
  });

  // ============================================================================
  // –ü–†–û–ö–°–ò–†–û–í–ê–ù–ò–ï –î–ê–ù–ù–´–• –ò–ó –ö–û–ú–ü–û–ó–ê–ë–õ–û–í
  // ============================================================================
  
  // –ü—Ä–æ–∫—Å–∏—Ä—É–µ–º computed —Å–≤–æ–π—Å—Ç–≤–∞ –∏–∑ –∫–æ–º–ø–æ–∑–∞–±–ª–∞ –∫—Ä–µ–∞—Ç–∏–≤–æ–≤ –¥–ª—è –µ–¥–∏–Ω–æ–≥–æ API:
  const creatives = computed(() => creativesComposable.creatives.value);
  const pagination = computed(() => creativesComposable.pagination.value);
  const isLoading = computed(() => creativesComposable.isLoading.value);
  const error = computed(() => creativesComposable.error.value);
  const hasCreatives = computed(() => creatives.value.length > 0);
  const meta = computed(() => creativesComposable.meta.value);

  // ============================================================================
  // –ú–ï–¢–û–î–´ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò
  // ============================================================================
  
  /**
   * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ–ø—Ü–∏–∏ –¥–ª—è —Å–µ–ª–µ–∫—Ç–æ–≤
   */
  function setSelectOptions(options: any): void {
    if (options.countries && Array.isArray(options.countries)) {
      countryOptions.value = [...options.countries];
    }
    
    if (options.sortOptions && Array.isArray(options.sortOptions)) {
      sortOptions.value = [...options.sortOptions];
    }
    
    if (options.dateRanges && Array.isArray(options.dateRanges)) {
      dateRanges.value = [...options.dateRanges];
    }
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –º—É–ª—å—Ç–∏—Å–µ–ª–µ–∫—Ç—ã
    const multiSelectFields = [
      'advertisingNetworks', 'languages', 'operatingSystems', 
      'browsers', 'devices', 'imageSizes'
    ];
    
    multiSelectFields.forEach(field => {
      if (options[field]) {
        if (Array.isArray(options[field])) {
          (multiSelectOptions as any)[field] = [...options[field]];
        } else {
          (multiSelectOptions as any)[field] = Object.entries(options[field]).map(([key, value]) => ({
            value: key,
            label: value as string
          }));
        }
      }
    });
  }

  /**
   * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ–ø—Ü–∏–∏ –¥–ª—è –≤–∫–ª–∞–¥–æ–∫
   */
  function setTabOptions(options: any): void {
    if (options.availableTabs && Array.isArray(options.availableTabs)) {
      tabs.availableTabs = [...options.availableTabs] as TabValue[];
    }
    
    if (options.tabCounts && typeof options.tabCounts === 'object') {
      tabs.tabCounts = { ...options.tabCounts };
    }
    
    if (options.activeTab && tabs.availableTabs.includes(options.activeTab as TabValue)) {
      tabs.activeTab = options.activeTab as TabValue;
    }
  }

  /**
   * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–µ—Ä–µ–≤–æ–¥—ã
   */
  function setTranslations(translationsData: Record<string, string>): void {
    translations.value = { ...translationsData };
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –ø–µ—Ä–µ–≤–æ–¥ —Å fallback —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π dot-notation
   */
  function getTranslation(key: string, fallback: string = key): string {
    // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ dot-notation –¥–ª—è –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 'filter.title')
    const keys = key.split('.');
    let result: any = translations.value;
    
    for (const k of keys) {
      if (result && typeof result === 'object' && k in result) {
        result = result[k];
      } else {
        return fallback;
      }
    }
    
    // –ï—Å–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç - –æ–±—ä–µ–∫—Ç, –ø–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ 'title' –∫–ª—é—á –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    if (typeof result === 'object' && result !== null) {
      if ('title' in result) {
        return result.title;
      }
      // –ò–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º fallback –µ—Å–ª–∏ –Ω–µ —Å–º–æ–≥–ª–∏ –∏–∑–≤–ª–µ—á—å —Å—Ç—Ä–æ–∫—É
      return fallback;
    }
    
    return typeof result === 'string' ? result : fallback;
  }

  /**
   * –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è store
   */
  async function initializeFilters(
    propsFilters?: Partial<FilterState>,
    selectOptions?: any,
    translationsData?: Record<string, string>,
    tabsOptions?: any
  ): Promise<void> {
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è CreativesFiltersStore —Å –Ω–æ–≤—ã–º–∏ –∫–æ–º–ø–æ–∑–∞–±–ª–∞–º–∏');
    
    // 1. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–ø—Ü–∏–∏
    if (selectOptions) {
      setSelectOptions(selectOptions);
    }
    
    if (tabsOptions) {
      setTabOptions(tabsOptions);
    }
    
    if (translationsData) {
      setTranslations(translationsData);
    }
    
    // 2. –ü—Ä–∏–º–µ–Ω—è–µ–º props
    if (propsFilters && Object.keys(propsFilters).length > 0) {
      Object.assign(filters, propsFilters);
    }
    
    // 3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é —Ñ–∏–ª—å—Ç—Ä–æ–≤
    await filtersSync.initialize();
    
    isInitialized.value = true;
    console.log('‚úÖ CreativesFiltersStore –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
  }

  // ============================================================================
  // –ú–ï–¢–û–î–´ –£–ü–†–ê–í–õ–ï–ù–ò–Ø –§–ò–õ–¨–¢–†–ê–ú–ò
  // ============================================================================
  
  /**
   * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞
   */
  function updateFilter<K extends keyof FilterState>(key: K, value: FilterState[K]): void {
    if (filters[key] !== value) {
      filters[key] = value;
    }
  }

  /**
   * –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
   */
  function toggleDetailedFilters(): void {
    filters.isDetailedVisible = !filters.isDetailedVisible;
  }

  /**
   * –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ adult —Ñ–∏–ª—å—Ç—Ä–∞
   */
  function toggleAdultFilter(): void {
    filters.onlyAdult = !filters.onlyAdult;
  }

  /**
   * –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –º—É–ª—å—Ç–∏—Å–µ–ª–µ–∫—Ç
   */
  function addToMultiSelect(field: keyof FilterState, value: string): void {
    const currentValues = filters[field] as string[];
    if (!currentValues.includes(value)) {
      const newValues = [...currentValues, value];
      (filters[field] as any) = newValues;
    }
  }

  /**
   * –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –º—É–ª—å—Ç–∏—Å–µ–ª–µ–∫—Ç–∞
   */
  function removeFromMultiSelect(field: keyof FilterState, value: string): void {
    const currentValues = filters[field] as string[];
    const index = currentValues.indexOf(value);
    if (index > -1) {
      const newValues = currentValues.filter(item => item !== value);
      (filters[field] as any) = newValues;
    }
  }

  /**
   * –°–±—Ä–æ—Å —Ñ–∏–ª—å—Ç—Ä–æ–≤
   */
  function resetFilters(): void {
    Object.assign(filters, defaultFilters);
  }

  /**
   * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
   */
  function saveSettings(): void {
    // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    console.log('–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ñ–∏–ª—å—Ç—Ä–æ–≤');
  }

  // ============================================================================
  // –ú–ï–¢–û–î–´ –£–ü–†–ê–í–õ–ï–ù–ò–Ø –í–ö–õ–ê–î–ö–ê–ú–ò
  // ============================================================================
  
  /**
   * –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
   */
  function setActiveTab(tabValue: TabValue): void {
    if (tabs.availableTabs.includes(tabValue) && tabs.activeTab !== tabValue) {
      const previousTab = tabs.activeTab;
      tabs.activeTab = tabValue;
      
      // –≠–º–∏—Ç–∏–º —Å–æ–±—ã—Ç–∏–µ
      const event = new CustomEvent('creatives:tab-changed', {
        detail: {
          previousTab,
          currentTab: tabValue,
          tabOption: currentTabOption.value
        }
      });
      document.dispatchEvent(event);
    }
  }

  // ============================================================================
  // –ú–ï–¢–û–î–´ –ö–†–ï–ê–¢–ò–í–û–í (–ü–†–û–ö–°–ò–†–û–í–ê–ù–ò–ï –° URL –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ï–ô)
  // ============================================================================
  
  /**
   * –ó–∞–≥—Ä—É–∑–∫–∞ –∫—Ä–µ–∞—Ç–∏–≤–æ–≤ —Å —É–∫–∞–∑–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π
   * 
   * –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç:
   * - –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ Store ‚Üí API —Ñ–æ—Ä–º–∞—Ç
   * - –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é page —Å URL –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏  
   * - –ó–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ API –∫–æ–º–ø–æ–∑–∞–±–ª
   */
  async function loadCreatives(page: number = 1): Promise<void> {
    const creativesFilters = creativesComposable.mapFiltersToCreativesFilters(
      filters,
      tabs.activeTab,
      page
    );
    
    // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º page —Å URL –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    urlSync.syncFiltersToUrl(filters, tabs.activeTab, page);
    
    await creativesComposable.loadCreativesWithFilters(creativesFilters);
  }

  /**
   * –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ PaginationComponent)
   */
  async function loadNextPage(): Promise<void> {
    await creativesComposable.loadNextPage();
  }

  /**
   * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—Ä–µ–∞—Ç–∏–≤–æ–≤ (–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å —Ç–µ–∫—É—â–∏–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏)
   */
  async function refreshCreatives(): Promise<void> {
    await creativesComposable.refreshCreatives();
  }

  // ============================================================================
  // –ú–ï–¢–û–î–´ –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ò–ó–ë–†–ê–ù–ù–´–ú
  // ============================================================================
  
  /**
   * –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
   */
  function setFavoritesCount(count: number): void {
    favoritesCount.value = count;
  }

  /**
   * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ —Å —Å–µ—Ä–≤–µ—Ä–∞
   */
  async function refreshFavoritesCount(): Promise<void> {
    if (isFavoritesLoading.value) return;

    try {
      isFavoritesLoading.value = true;
      
      // –†–µ–∞–ª—å–Ω—ã–π API –≤—ã–∑–æ–≤
      const response = await window.axios.get('/api/creatives/favorites/count');
      favoritesCount.value = response.data.data.count;
      
      // –≠–º–∏—Ç–∏–º —Å–æ–±—ã—Ç–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
      const event = new CustomEvent('creatives:favorites-updated', {
        detail: {
          count: favoritesCount.value,
          action: 'refresh',
          timestamp: new Date().toISOString()
        }
      });
      document.dispatchEvent(event);
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—á–µ—Ç—á–∏–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:', error);
      throw error;
    } finally {
      isFavoritesLoading.value = false;
    }
  }

  /**
   * –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫—Ä–µ–∞—Ç–∏–≤–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
   */
  async function addToFavorites(creativeId: number): Promise<void> {
    if (isFavoritesLoading.value) return;

    try {
      isFavoritesLoading.value = true;
      
      // –û–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
      if (!favoritesItems.value.includes(creativeId)) {
        favoritesItems.value.push(creativeId);
        if (favoritesCount.value !== undefined) {
          favoritesCount.value += 1;
        }
      }
      
      // API –≤—ã–∑–æ–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
      const response = await window.axios.post(`/api/creatives/${creativeId}/favorite`);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º count –∏–∑ –æ—Ç–≤–µ—Ç–∞ API (–µ—Å–ª–∏ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –æ–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω–æ–≥–æ)
      if (response.data.data.totalFavorites !== favoritesCount.value) {
        favoritesCount.value = response.data.data.totalFavorites;
      }
      
      // –≠–º–∏—Ç–∏–º —Å–æ–±—ã—Ç–∏–µ
      const event = new CustomEvent('creatives:favorites-updated', {
        detail: {
          count: favoritesCount.value || 0,
          action: 'add',
          creativeId,
          timestamp: new Date().toISOString()
        }
      });
      document.dispatchEvent(event);
      
    } catch (error) {
      // –û—Ç–∫–∞—Ç—ã–≤–∞–µ–º –æ–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
      const index = favoritesItems.value.indexOf(creativeId);
      if (index > -1) {
        favoritesItems.value.splice(index, 1);
        if (favoritesCount.value !== undefined) {
          favoritesCount.value -= 1;
        }
      }
      
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ:', error);
      throw error;
    } finally {
      isFavoritesLoading.value = false;
    }
  }

  /**
   * –£–¥–∞–ª–µ–Ω–∏–µ –∫—Ä–µ–∞—Ç–∏–≤–∞ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
   */
  async function removeFromFavorites(creativeId: number): Promise<void> {
    if (isFavoritesLoading.value) return;

    try {
      isFavoritesLoading.value = true;
      
      // –û–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
      const index = favoritesItems.value.indexOf(creativeId);
      if (index > -1) {
        favoritesItems.value.splice(index, 1);
        if (favoritesCount.value !== undefined) {
          favoritesCount.value -= 1;
        }
      }
      
      // API –≤—ã–∑–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
      const response = await window.axios.delete(`/api/creatives/${creativeId}/favorite`);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º count –∏–∑ –æ—Ç–≤–µ—Ç–∞ API (–µ—Å–ª–∏ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –æ–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω–æ–≥–æ)
      if (response.data.data.totalFavorites !== favoritesCount.value) {
        favoritesCount.value = response.data.data.totalFavorites;
      }
      
      // –≠–º–∏—Ç–∏–º —Å–æ–±—ã—Ç–∏–µ
      const event = new CustomEvent('creatives:favorites-updated', {
        detail: {
          count: favoritesCount.value || 0,
          action: 'remove',
          creativeId,
          timestamp: new Date().toISOString()
        }
      });
      document.dispatchEvent(event);
      
    } catch (error) {
      // –û—Ç–∫–∞—Ç—ã–≤–∞–µ–º –æ–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
      if (!favoritesItems.value.includes(creativeId)) {
        favoritesItems.value.push(creativeId);
        if (favoritesCount.value !== undefined) {
          favoritesCount.value += 1;
        }
      }
      
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:', error);
      throw error;
    } finally {
      isFavoritesLoading.value = false;
    }
  }

  // ============================================================================
  // –í–û–ó–í–†–ê–¢ –û–ë–™–ï–ö–¢–ê STORE - –ï–î–ò–ù–´–ô API –î–õ–Ø VUE –ö–û–ú–ü–û–ù–ï–ù–¢–û–í
  // ============================================================================
  
  return {
    // ========================================
    // –†–ï–ê–ö–¢–ò–í–ù–û–ï –°–û–°–¢–û–Ø–ù–ò–ï
    // ========================================
    filters,                    // –¢–µ–∫—É—â–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã (FilterState)
    tabs,                       // –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫ (TabsState)  
    isInitialized,              // –§–ª–∞–≥ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Store
    
    // ========================================
    // –û–ü–¶–ò–ò –î–õ–Ø –°–ï–õ–ï–ö–¢–û–í –ò UI
    // ========================================
    countryOptions,             // –û–ø—Ü–∏–∏ —Å—Ç—Ä–∞–Ω –¥–ª—è dropdown
    sortOptions,                // –û–ø—Ü–∏–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
    dateRanges,                 // –û–ø—Ü–∏–∏ –¥–∏–∞–ø–∞–∑–æ–Ω–æ–≤ –¥–∞—Ç
    advertisingNetworksOptions, // –û–ø—Ü–∏–∏ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö —Å–µ—Ç–µ–π
    languagesOptions,           // –û–ø—Ü–∏–∏ —è–∑—ã–∫–æ–≤
    operatingSystemsOptions,    // –û–ø—Ü–∏–∏ –û–°
    browsersOptions,            // –û–ø—Ü–∏–∏ –±—Ä–∞—É–∑–µ—Ä–æ–≤  
    devicesOptions,             // –û–ø—Ü–∏–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    imageSizesOptions,          // –û–ø—Ü–∏–∏ —Ä–∞–∑–º–µ—Ä–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    tabOptions,                 // –û–ø—Ü–∏–∏ –≤–∫–ª–∞–¥–æ–∫ —Å —Å—á–µ—Ç—á–∏–∫–∞–º–∏
    currentTabOption,           // –¢–µ–∫—É—â–∞—è –∞–∫—Ç–∏–≤–Ω–∞—è –≤–∫–ª–∞–¥–∫–∞
    
    // ========================================
    // –ü–†–û–ö–°–ò–†–û–í–ê–ù–ù–´–ï –î–ê–ù–ù–´–ï –ò–ó –ö–û–ú–ü–û–ó–ê–ë–õ–û–í
    // ========================================
    creatives,                  // –°–ø–∏—Å–æ–∫ –∫—Ä–µ–∞—Ç–∏–≤–æ–≤ –∏–∑ API
    pagination,                 // –î–∞–Ω–Ω—ã–µ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ 
    isLoading,                  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
    error,                      // –û—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏
    hasCreatives,               // –ï—Å—Ç—å –ª–∏ –∫—Ä–µ–∞—Ç–∏–≤—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    meta,                       // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞
    hasActiveFilters,           // –ï—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
    
    // ========================================
    // –ú–ï–¢–û–î–´ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò
    // ========================================
    initializeFilters,          // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Store
    setSelectOptions,           // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–ø—Ü–∏–π —Å–µ–ª–µ–∫—Ç–æ–≤
    setTabOptions,              // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–ø—Ü–∏–π –≤–∫–ª–∞–¥–æ–∫
    setTranslations,            // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–≤
    getTranslation,             // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–∞ —Å fallback
    
    // ========================================
    // –ú–ï–¢–û–î–´ –£–ü–†–ê–í–õ–ï–ù–ò–Ø –§–ò–õ–¨–¢–†–ê–ú–ò
    // ========================================
    updateFilter,               // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª—é–±–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞
    toggleDetailedFilters,      // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
    toggleAdultFilter,          // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ adult —Ñ–∏–ª—å—Ç—Ä–∞
    addToMultiSelect,           // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –º—É–ª—å—Ç–∏—Å–µ–ª–µ–∫—Ç
    removeFromMultiSelect,      // –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –º—É–ª—å—Ç–∏—Å–µ–ª–µ–∫—Ç–∞
    resetFilters,               // –°–±—Ä–æ—Å –≤—Å–µ—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
    saveSettings,               // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ (TODO)
    
    // ========================================
    // –ú–ï–¢–û–î–´ –£–ü–†–ê–í–õ–ï–ù–ò–Ø –í–ö–õ–ê–î–ö–ê–ú–ò  
    // ========================================
    setActiveTab,               // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
    
    // ========================================
    // –ú–ï–¢–û–î–´ –†–ê–ë–û–¢–´ –° –ö–†–ï–ê–¢–ò–í–ê–ú–ò
    // ========================================
    loadCreatives,              // –ó–∞–≥—Ä—É–∑–∫–∞ –∫—Ä–µ–∞—Ç–∏–≤–æ–≤ (—Å page)
    loadNextPage,               // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    refreshCreatives,           // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∫—Ä–µ–∞—Ç–∏–≤–æ–≤
    
    // ========================================
    // –°–û–°–¢–û–Ø–ù–ò–ï –ò –ú–ï–¢–û–î–´ –ò–ó–ë–†–ê–ù–ù–û–ì–û
    // ========================================
    favoritesCount,             // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
    favoritesItems,             // –°–ø–∏—Å–æ–∫ ID –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –∫—Ä–µ–∞—Ç–∏–≤–æ–≤
    isFavoritesLoading,         // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
    setFavoritesCount,          // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
    refreshFavoritesCount,      // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞
    addToFavorites,             // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
    removeFromFavorites,        // –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
    
    // ========================================
    // –ü–†–Ø–ú–û–ô –î–û–°–¢–£–ü –ö –ö–û–ú–ü–û–ó–ê–ë–õ–ê–ú (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
    // ========================================
    creativesComposable,        // useCreatives –∫–æ–º–ø–æ–∑–∞–±–ª
    urlSync,                    // useCreativesUrlSync –∫–æ–º–ø–æ–∑–∞–±–ª  
    filtersSync,                // useFiltersSynchronization –∫–æ–º–ø–æ–∑–∞–±–ª
  };
});