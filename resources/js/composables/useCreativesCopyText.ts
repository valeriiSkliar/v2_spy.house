/**
 * –¢–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
 */
export type CopyContentType = 'title' | 'description' | 'landing_url' | 'custom';

/**
 * –ö–æ–º–ø–æ–∑–∞–±–ª –¥–ª—è —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∫—Ä–µ–∞—Ç–∏–≤–æ–≤
 * Stateless —É—Ç–∏–ª–∏—Ç–∞ –±–µ–∑ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è, —Ç–æ–ª—å–∫–æ –º–µ—Ç–æ–¥—ã
 * 
 * üéØ –ù–ê–ó–ù–ê–ß–ï–ù–ò–ï:
 * - –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π creatives:copy-text
 * - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤, –æ–ø–∏—Å–∞–Ω–∏–π, URL –∏ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
 * - –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * - Fallback –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
 * 
 * üìã –ü–û–î–î–ï–†–ñ–ò–í–ê–ï–ú–´–ï –¢–ò–ü–´:
 * - title ‚Üí –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∫—Ä–µ–∞—Ç–∏–≤–∞
 * - description ‚Üí –æ–ø–∏—Å–∞–Ω–∏–µ –∫—Ä–µ–∞—Ç–∏–≤–∞  
 * - landing_url ‚Üí —Å—Å—ã–ª–∫–∞ –Ω–∞ –ª–µ–Ω–¥–∏–Ω–≥
 * - custom ‚Üí –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç
 * 
 * üîß –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø:
 * - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ Store —á–µ—Ä–µ–∑ setupEventListeners()
 * - –°–ª—É—à–∞–µ—Ç —Å–æ–±—ã—Ç–∏–µ creatives:copy-text —Å –ø–æ–ª—è–º–∏ text, type, creativeId
 * - –≠–º–∏—Ç–∏—Ä—É–µ—Ç —Å–æ–±—ã—Ç–∏—è –æ–± —É—Å–ø–µ—Ö–µ/–æ—à–∏–±–∫–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
 */
export function useCreativesCopyText() {
  
  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ª–∏ –±—Ä–∞—É–∑–µ—Ä —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π clipboard API
   */
  function isClipboardSupported(): boolean {
    return navigator && navigator.clipboard && typeof navigator.clipboard.writeText === 'function';
  }
  
  /**
   * –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ clipboard API
   */
  async function copyWithClipboardAPI(text: string): Promise<void> {
    try {
      await navigator.clipboard.writeText(text);
    } catch (error) {
      // –ï—Å–ª–∏ clipboard API –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback
      throw new Error(`Clipboard API failed: ${error instanceof Error ? error.message : 'Unknown error'}`);
    }
  }
  
  /**
   * Fallback –º–µ—Ç–æ–¥ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
   */
  function copyWithFallback(text: string): void {
    try {
      // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π textarea —ç–ª–µ–º–µ–Ω—Ç
      const textarea = document.createElement('textarea');
      textarea.value = text;
      textarea.style.position = 'fixed';
      textarea.style.left = '-9999px';
      textarea.style.top = '-9999px';
      textarea.style.opacity = '0';
      textarea.setAttribute('readonly', '');
      textarea.setAttribute('tabindex', '-1');
      
      // –î–æ–±–∞–≤–ª—è–µ–º –≤ DOM
      document.body.appendChild(textarea);
      
      // –í—ã–¥–µ–ª—è–µ–º —Ç–µ–∫—Å—Ç
      textarea.select();
      textarea.setSelectionRange(0, textarea.value.length);
      
      // –ö–æ–ø–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ execCommand
      const successful = document.execCommand('copy');
      
      // –£–¥–∞–ª—è–µ–º –∏–∑ DOM
      document.body.removeChild(textarea);
      
      if (!successful) {
        throw new Error('execCommand copy failed');
      }
      
    } catch (error) {
      throw new Error(`Fallback copy failed: ${error instanceof Error ? error.message : 'Unknown error'}`);
    }
  }
  
  /**
   * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º fallback
   */
  async function copyToClipboard(text: string): Promise<{ method: string; fallback: boolean }> {
    if (!text || text.trim() === '') {
      throw new Error('–¢–µ–∫—Å—Ç –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º');
    }
    
    // –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π clipboard API
    if (isClipboardSupported()) {
      try {
        await copyWithClipboardAPI(text);
        return { method: 'clipboard-api', fallback: false };
      } catch (clipboardError) {
        console.warn('Clipboard API –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback:', clipboardError);
        
        // –ï—Å–ª–∏ clipboard API –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback
        try {
          copyWithFallback(text);
          return { method: 'execCommand', fallback: true };
        } catch (fallbackError) {
          // –ï—Å–ª–∏ –∏ fallback –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
          throw new Error(`–í—Å–µ –º–µ—Ç–æ–¥—ã –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ —É–¥–∞–ª–∏—Å—å. Clipboard API: ${clipboardError}. Fallback: ${fallbackError}`);
        }
      }
    } else {
      // –ï—Å–ª–∏ clipboard API –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è, —Å—Ä–∞–∑—É –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback
      try {
        copyWithFallback(text);
        return { method: 'execCommand', fallback: true };
      } catch (fallbackError) {
        throw new Error(`Fallback –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å: ${fallbackError}`);
      }
    }
  }
  
  /**
   * –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–∏–ø–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
   */
  function validateContentType(type: string): type is CopyContentType {
    const validTypes: CopyContentType[] = ['title', 'description', 'landing_url', 'custom'];
    return validTypes.includes(type as CopyContentType);
  }
  
  /**
   * –ì–ª–∞–≤–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –∫—Ä–µ–∞—Ç–∏–≤–æ–≤
   * @param text - —Ç–µ–∫—Å—Ç –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
   * @param type - —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (title, description, landing_url, custom)
   * @param creativeId - ID –∫—Ä–µ–∞—Ç–∏–≤–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
   */
  async function handleCopyText(
    text: string, 
    type: CopyContentType = 'custom', 
    creativeId?: number
  ): Promise<void> {
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if (!text || text.trim() === '') {
      throw new Error('–¢–µ–∫—Å—Ç –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º');
    }
    
    if (!validateContentType(type)) {
      throw new Error(`–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞: ${type}`);
    }
    
    console.log(`üìã –ù–∞—á–∏–Ω–∞–µ–º –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ:`, {
      text: text.substring(0, 50) + (text.length > 50 ? '...' : ''),
      type,
      creativeId,
      textLength: text.length
    });
    
    try {
      // –≠–º–∏—Ç–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ –Ω–∞—á–∞–ª–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
      document.dispatchEvent(new CustomEvent('creatives:copy-started', {
        detail: {
          text,
          type,
          creativeId,
          timestamp: new Date().toISOString()
        }
      }));
      
      // –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ
      const result = await copyToClipboard(text);
      
      // –≠–º–∏—Ç–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
      document.dispatchEvent(new CustomEvent('creatives:copy-success', {
        detail: {
          text,
          type,
          creativeId,
          method: result.method,
          fallback: result.fallback,
          timestamp: new Date().toISOString()
        }
      }));
      
      console.log(`‚úÖ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ (${result.method}${result.fallback ? ', fallback' : ''})`);
      
    } catch (error) {
      const errorMessage = error instanceof Error ? error.message : 'Unknown error';
      
      console.error(`‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:`, error);
      
      // –≠–º–∏—Ç–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ –æ—à–∏–±–∫–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
      document.dispatchEvent(new CustomEvent('creatives:copy-error', {
        detail: {
          text,
          type,
          creativeId,
          error: errorMessage,
          timestamp: new Date().toISOString()
        }
      }));
      
      throw error; // –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–∞–ª—å—à–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ Store
    }
  }
  
  /**
   * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–ª—É—à–∞—Ç–µ–ª—è —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
   * –î–æ–ª–∂–Ω–∞ –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Store
   */
  function setupCopyEventListener(): () => void {
    const handleCopyEvent = async (event: CustomEvent) => {
      const { text, type = 'custom', creativeId } = event.detail;
      
      try {
        await handleCopyText(text, type, creativeId);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ —Å–æ–±—ã—Ç–∏—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
        // –û—à–∏–±–∫–∞ —É–∂–µ —ç–º–∏—Ç–∏—Ä–æ–≤–∞–Ω–∞ –≤ handleCopyText
      }
    };
    
    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª—É—à–∞—Ç–µ–ª—å
    document.addEventListener('creatives:copy-text', handleCopyEvent as unknown as EventListener);
    
    console.log('üìã –°–ª—É—à–∞—Ç–µ–ª—å —Å–æ–±—ã—Ç–∏–π –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –∫—Ä–µ–∞—Ç–∏–≤–æ–≤ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω');
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ—á–∏—Å—Ç–∫–∏
    return () => {
      document.removeEventListener('creatives:copy-text', handleCopyEvent as unknown as EventListener);
      console.log('üßπ –°–ª—É—à–∞—Ç–µ–ª—å —Å–æ–±—ã—Ç–∏–π –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –∫—Ä–µ–∞—Ç–∏–≤–æ–≤ —É–¥–∞–ª–µ–Ω');
    };
  }
  
  /**
   * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä—è–º–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
   * (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ –æ–±–æ–π—Ç–∏ —Å–æ–±—ã—Ç–∏–π–Ω—É—é —Å–∏—Å—Ç–µ–º—É)
   */
  
  /**
   * –ü—Ä—è–º–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∫—Ä–µ–∞—Ç–∏–≤–∞
   */
  async function copyCreativeTitle(title: string, creativeId?: number): Promise<void> {
    await handleCopyText(title, 'title', creativeId);
  }
  
  /**
   * –ü—Ä—è–º–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –∫—Ä–µ–∞—Ç–∏–≤–∞
   */
  async function copyCreativeDescription(description: string, creativeId?: number): Promise<void> {
    await handleCopyText(description, 'description', creativeId);
  }
  
  /**
   * –ü—Ä—è–º–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ URL –∫—Ä–µ–∞—Ç–∏–≤–∞
   */
  async function copyCreativeLandingUrl(landingUrl: string, creativeId?: number): Promise<void> {
    await handleCopyText(landingUrl, 'landing_url', creativeId);
  }
  
  /**
   * –ü—Ä—è–º–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
   */
  async function copyCustomText(text: string): Promise<void> {
    await handleCopyText(text, 'custom');
  }
  
  return {
    // –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã
    handleCopyText,
    setupCopyEventListener,
    
    // –ü—Ä—è–º—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    copyCreativeTitle,
    copyCreativeDescription, 
    copyCreativeLandingUrl,
    copyCustomText,
    
    // –£—Ç–∏–ª–∏—Ç–∞—Ä–Ω—ã–µ –º–µ—Ç–æ–¥—ã (–¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–µ—Å—Ç–∞—Ö)
    copyToClipboard,
    
    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    isClipboardSupported,
    validateContentType
  };
} 