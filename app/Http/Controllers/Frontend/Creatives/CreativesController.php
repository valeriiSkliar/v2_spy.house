<?php

namespace App\Http\Controllers\Frontend\Creatives;

use App\Http\Controllers\FrontendController;
use App\Helpers\IsoCodesHelper;
use App\Models\AdvertismentNetwork;
use App\Models\Browser;
use App\Enums\Frontend\DeviceType;
use App\Enums\Frontend\OperationSystem;
use Illuminate\Http\Request;

class CreativesController extends FrontendController
{
    public function index(Request $request)
    {
        // –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ (—Å–æ—Å—Ç–æ—è–Ω–∏–µ) - —á—Ç–æ –≤—ã–±—Ä–∞–Ω–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        $defaultFilters = [
            'country' => 'default',
            'dateCreation' => 'default',
            'sortBy' => 'default',
            'periodDisplay' => 'default',
            'searchKeyword' => '',
            'onlyAdult' => false,
            'isDetailedVisible' => false,
            // –í—ã–±—Ä–∞–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è - –ø—É—Å—Ç—ã–µ –º–∞—Å—Å–∏–≤—ã
            'advertisingNetworks' => [],
            'languages' => [],
            'operatingSystems' => [],
            'browsers' => [],
            'devices' => [],
            'imageSizes' => [],
            'savedSettings' => []
        ];

        // –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –≤–∫–ª–∞–¥–æ–∫
        $defaultTabs = [
            'activeTab' => $request->get('tab', 'push'),
            'availableTabs' => ['push', 'inpage', 'facebook', 'tiktok'],
            'tabCounts' => [
                'push' => 1700000,
                'inpage' => 965100,
                'facebook' => 65100,
                'tiktok' => 9852000,
                'total' => 10000000
            ]
        ];

        $translations = [
            'country' => '–°—Ç—Ä–∞–Ω–∞',
            'dateCreation' => '–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è',
            'sortBy' => '–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞',
            'periodDisplay' => '–ü–µ—Ä–∏–æ–¥ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è',
            'searchKeyword' => '–ü–æ–∏—Å–∫',
            'onlyAdult' => '–¢–æ–ª—å–∫–æ –¥–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö',
            'isDetailedVisible' => '–ü–æ–¥—Ä–æ–±–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä',
            'advertisingNetworks' => '–†–µ–∫–ª–∞–º–Ω—ã–µ —Å–µ—Ç–∏',
            'languages' => '–Ø–∑—ã–∫–∏',
            'operatingSystems' => '–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã',
            'browsers' => '–ë—Ä–∞—É–∑–µ—Ä—ã',
            'devices' => '–£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞',
            'imageSizes' => '–†–∞–∑–º–µ—Ä—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π',
            'savedSettings' => '–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏',
            'onPage' => '–ù–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ',
            'favorites' => '–ò–∑–±—Ä–∞–Ω–Ω–æ–µ',
            'filter' => '–§–∏–ª—å—Ç—Ä',
            'filterBy' => '–§–∏–ª—å—Ç—Ä –ø–æ',
            'customDateLabel' => '–í—ã–±—Ä–∞—Ç—å –¥–∞—Ç—É',
            'filterByCountry' => '–§–∏–ª—å—Ç—Ä –ø–æ —Å—Ç—Ä–∞–Ω–µ',
            'filterByDateCreation' => '–§–∏–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è',
            'savePresetButton' => '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏',
            'resetButton' => '–°–±—Ä–æ—Å–∏—Ç—å',
            // –ü–µ—Ä–µ–≤–æ–¥—ã –¥–ª—è –≤–∫–ª–∞–¥–æ–∫
            'tabs.push' => 'Push',
            'tabs.inpage' => 'In Page',
            'tabs.facebook' => 'Facebook',
            'tabs.tiktok' => 'TikTok',
        ];

        $selectOptions = $this->getSelectOptions();
        $tabOptions = $this->getTabOptions();

        return view('pages.creatives.index', [
            'activeTab' => $defaultTabs['activeTab'],
            'filters' => $defaultFilters,
            'tabs' => $defaultTabs,
            'selectOptions' => $selectOptions,
            'tabOptions' => $tabOptions,
            'translations' => $translations,
        ]);
    }

    public function getSelectOptions()
    {
        return [
            'advertisingNetworks' => AdvertismentNetwork::forCreativeFilters(),
            'countries' => IsoCodesHelper::getAllCountries(app()->getLocale()),
            'sortOptions' => [
                ['value' => 'byCreationDate', 'label' => '–ü–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è'],
                ['value' => 'byActivity', 'label' => '–ü–æ –¥–Ω—è–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏'],
                ['value' => 'byPopularity', 'label' => '–ü–æ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏'],
            ],
            'dateRanges' => [
                ['value' => 'today', 'label' => '–°–µ–≥–æ–¥–Ω—è'],
                ['value' => 'yesterday', 'label' => '–í—á–µ—Ä–∞'],
                ['value' => 'last7', 'label' => '–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π'],
                ['value' => 'last30', 'label' => '–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π'],
                ['value' => 'last90', 'label' => '–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 90 –¥–Ω–µ–π'],
                ['value' => 'thisMonth', 'label' => '–ó–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü'],
                ['value' => 'lastMonth', 'label' => '–ó–∞ –ø—Ä–æ—à–ª—ã–π –º–µ—Å—è—Ü'],
                ['value' => 'thisYear', 'label' => '–ó–∞ —Ç–µ–∫—É—â–∏–π –≥–æ–¥'],
                ['value' => 'lastYear', 'label' => '–ó–∞ –ø—Ä–æ—à–ª—ã–π –≥–æ–¥'],
            ],
            'languages' => IsoCodesHelper::getAllLanguages(app()->getLocale()),
            'operatingSystems' => OperationSystem::getForSelect(),
            'browsers' => Browser::getBrowsersForSelect(),
            'devices' => DeviceType::getForSelect(),
            'imageSizes' => [
                ['value' => '1x1', 'label' => '1x1 (Square)'],
                ['value' => '16x9', 'label' => '16x9 (Landscape)'],
                ['value' => '9x16', 'label' => '9x16 (Portrait)'],
                ['value' => '3x2', 'label' => '3x2 (Classic)'],
                ['value' => '2x3', 'label' => '2x3 (Portrait)'],
                ['value' => '4x3', 'label' => '4x3 (Standard)'],
                ['value' => '3x4', 'label' => '3x4 (Portrait)'],
                ['value' => '21x9', 'label' => '21x9 (Ultra-wide)'],
            ],
        ];
    }

    public function getTabOptions()
    {
        return [
            'availableTabs' => ['push', 'inpage', 'facebook', 'tiktok'],
            'tabCounts' => [
                'push' => 170000,
                'inpage' => 965100,
                'facebook' => 65100,
                'tiktok' => 9852000,
                'total' => 10000000
            ],
            'activeTab' => 'push'
        ];
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Å—Ç—Ä–∞–Ω—ã
     * 
     * @OA\Get(
     *     path="/api/creatives/countries/all",
     *     operationId="getAllCountries",
     *     tags={"–ö—Ä–µ–∞—Ç–∏–≤—ã - –°—Ç—Ä–∞–Ω—ã"},
     *     summary="–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω",
     *     description="–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–Ω —Å –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏",
     *     @OA\Parameter(
     *         name="lang",
     *         in="query",
     *         description="–ö–æ–¥ —è–∑—ã–∫–∞ –¥–ª—è –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏",
     *         required=false,
     *         @OA\Schema(type="string", example="ru")
     *     ),
     *     @OA\Response(
     *         response=200,
     *         description="–°–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω",
     *         @OA\JsonContent(
     *             @OA\Property(property="countries", type="array", 
     *                 @OA\Items(
     *                     @OA\Property(property="code", type="string", example="US"),
     *                     @OA\Property(property="name", type="string", example="–°–æ–µ–¥–∏–Ω–µ–Ω–Ω—ã–µ –®—Ç–∞—Ç—ã"),
     *                     @OA\Property(property="flag", type="string", example="üá∫üá∏")
     *                 )
     *             )
     *         )
     *     )
     * )
     */
    public function getAllCountries(Request $request)
    {
        $languageCode = $request->get('lang', app()->getLocale());
        return response()->json([
            'countries' => IsoCodesHelper::getAllCountries($languageCode)
        ]);
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —è–∑—ã–∫–∏
     * 
     * @OA\Get(
     *     path="/api/creatives/languages/all",
     *     operationId="getAllLanguages",
     *     tags={"–ö—Ä–µ–∞—Ç–∏–≤—ã - –Ø–∑—ã–∫–∏"},
     *     summary="–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —è–∑—ã–∫–æ–≤",
     *     description="–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ —è–∑—ã–∫–æ–≤ —Å –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏",
     *     @OA\Parameter(
     *         name="lang",
     *         in="query",
     *         description="–ö–æ–¥ —è–∑—ã–∫–∞ –¥–ª—è –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏",
     *         required=false,
     *         @OA\Schema(type="string", example="ru")
     *     ),
     *     @OA\Response(
     *         response=200,
     *         description="–°–ø–∏—Å–æ–∫ —è–∑—ã–∫–æ–≤ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω",
     *         @OA\JsonContent(
     *             @OA\Property(property="languages", type="array", 
     *                 @OA\Items(
     *                     @OA\Property(property="code", type="string", example="en"),
     *                     @OA\Property(property="name", type="string", example="English"),
     *                     @OA\Property(property="nativeName", type="string", example="English")
     *                 )
     *             )
     *         )
     *     )
     * )
     */
    public function getAllLanguages(Request $request)
    {
        $languageCode = $request->get('lang', app()->getLocale());
        return response()->json([
            'languages' => IsoCodesHelper::getAllLanguages($languageCode)
        ]);
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å—Ç—Ä–∞–Ω—ã
     * 
     * @OA\Get(
     *     path="/api/creatives/countries/popular",
     *     operationId="getPopularCountries",
     *     tags={"–ö—Ä–µ–∞—Ç–∏–≤—ã - –°—Ç—Ä–∞–Ω—ã"},
     *     summary="–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Å—Ç—Ä–∞–Ω",
     *     description="–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Å—Ç—Ä–∞–Ω –¥–ª—è —Ä–µ–∫–ª–∞–º—ã",
     *     @OA\Parameter(
     *         name="lang",
     *         in="query",
     *         description="–ö–æ–¥ —è–∑—ã–∫–∞ –¥–ª—è –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏",
     *         required=false,
     *         @OA\Schema(type="string", example="ru")
     *     ),
     *     @OA\Response(
     *         response=200,
     *         description="–°–ø–∏—Å–æ–∫ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Å—Ç—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω",
     *         @OA\JsonContent(
     *             @OA\Property(property="countries", type="array", 
     *                 @OA\Items(
     *                     @OA\Property(property="code", type="string", example="US"),
     *                     @OA\Property(property="name", type="string", example="–°–æ–µ–¥–∏–Ω–µ–Ω–Ω—ã–µ –®—Ç–∞—Ç—ã"),
     *                     @OA\Property(property="flag", type="string", example="üá∫üá∏"),
     *                     @OA\Property(property="popularity", type="integer", example=95)
     *                 )
     *             )
     *         )
     *     )
     * )
     */
    public function getPopularCountries(Request $request)
    {
        $languageCode = $request->get('lang', app()->getLocale());
        return response()->json([
            'countries' => IsoCodesHelper::getPopularCountries($languageCode)
        ]);
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –±—Ä–∞—É–∑–µ—Ä—ã
     * 
     * @OA\Get(
     *     path="/api/creatives/browsers/all",
     *     operationId="getAllBrowsers",
     *     tags={"–ö—Ä–µ–∞—Ç–∏–≤—ã - –ë—Ä–∞—É–∑–µ—Ä—ã"},
     *     summary="–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤",
     *     description="–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –±—Ä–∞—É–∑–µ—Ä–æ–≤ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∫—Ä–µ–∞—Ç–∏–≤–æ–≤",
     *     @OA\Response(
     *         response=200,
     *         description="–°–ø–∏—Å–æ–∫ –±—Ä–∞—É–∑–µ—Ä–æ–≤ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω",
     *         @OA\JsonContent(
     *             @OA\Property(property="browsers", type="array", 
     *                 @OA\Items(
     *                     @OA\Property(property="id", type="integer", example=1),
     *                     @OA\Property(property="name", type="string", example="Chrome"),
     *                     @OA\Property(property="version", type="string", example="120.0"),
     *                     @OA\Property(property="device_type", type="string", example="desktop")
     *                 )
     *             )
     *         )
     *     )
     * )
     */
    public function getAllBrowsers(Request $request)
    {
        return response()->json([
            'browsers' => Browser::getBrowsersForSelect()
        ]);
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –±—Ä–∞—É–∑–µ—Ä—ã
     * 
     * @OA\Get(
     *     path="/api/creatives/browsers/popular",
     *     operationId="getPopularBrowsers",
     *     tags={"–ö—Ä–µ–∞—Ç–∏–≤—ã - –ë—Ä–∞—É–∑–µ—Ä—ã"},
     *     summary="–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤",
     *     description="–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞",
     *     @OA\Parameter(
     *         name="limit",
     *         in="query",
     *         description="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—Ä–∞—É–∑–µ—Ä–æ–≤ –≤ –æ—Ç–≤–µ—Ç–µ",
     *         required=false,
     *         @OA\Schema(type="integer", example=10, minimum=1, maximum=50)
     *     ),
     *     @OA\Response(
     *         response=200,
     *         description="–°–ø–∏—Å–æ–∫ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω",
     *         @OA\JsonContent(
     *             @OA\Property(property="browsers", type="array", 
     *                 @OA\Items(
     *                     @OA\Property(property="id", type="integer", example=1),
     *                     @OA\Property(property="name", type="string", example="Chrome"),
     *                     @OA\Property(property="usage_percentage", type="number", format="float", example=65.2),
     *                     @OA\Property(property="device_type", type="string", example="desktop")
     *                 )
     *             )
     *         )
     *     )
     * )
     */
    public function getPopularBrowsers(Request $request)
    {
        $limit = $request->get('limit', 10);
        return response()->json([
            'browsers' => Browser::getPopularBrowsersForSelect($limit)
        ]);
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –º–æ–±–∏–ª—å–Ω—ã–µ –±—Ä–∞—É–∑–µ—Ä—ã
     * 
     * @OA\Get(
     *     path="/api/creatives/browsers/mobile",
     *     operationId="getMobileBrowsers",
     *     tags={"–ö—Ä–µ–∞—Ç–∏–≤—ã - –ë—Ä–∞—É–∑–µ—Ä—ã"},
     *     summary="–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –º–æ–±–∏–ª—å–Ω—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤",
     *     description="–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –±—Ä–∞—É–∑–µ—Ä–æ–≤ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤",
     *     @OA\Response(
     *         response=200,
     *         description="–°–ø–∏—Å–æ–∫ –º–æ–±–∏–ª—å–Ω—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω",
     *         @OA\JsonContent(
     *             @OA\Property(property="browsers", type="array", 
     *                 @OA\Items(
     *                     @OA\Property(property="id", type="integer", example=1),
     *                     @OA\Property(property="name", type="string", example="Chrome Mobile"),
     *                     @OA\Property(property="version", type="string", example="120.0"),
     *                     @OA\Property(property="device_type", type="string", example="mobile")
     *                 )
     *             )
     *         )
     *     )
     * )
     */
    public function getMobileBrowsers(Request $request)
    {
        return response()->json([
            'browsers' => Browser::getMobileBrowsersForSelect()
        ]);
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –¥–µ—Å–∫—Ç–æ–ø–Ω—ã–µ –±—Ä–∞—É–∑–µ—Ä—ã
     * 
     * @OA\Get(
     *     path="/api/creatives/browsers/desktop",
     *     operationId="getDesktopBrowsers",
     *     tags={"–ö—Ä–µ–∞—Ç–∏–≤—ã - –ë—Ä–∞—É–∑–µ—Ä—ã"},
     *     summary="–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–µ—Å–∫—Ç–æ–ø–Ω—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤",
     *     description="–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –±—Ä–∞—É–∑–µ—Ä–æ–≤ –¥–ª—è –Ω–∞—Å—Ç–æ–ª—å–Ω—ã—Ö –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–≤",
     *     @OA\Response(
     *         response=200,
     *         description="–°–ø–∏—Å–æ–∫ –¥–µ—Å–∫—Ç–æ–ø–Ω—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω",
     *         @OA\JsonContent(
     *             @OA\Property(property="browsers", type="array", 
     *                 @OA\Items(
     *                     @OA\Property(property="id", type="integer", example=1),
     *                     @OA\Property(property="name", type="string", example="Chrome"),
     *                     @OA\Property(property="version", type="string", example="120.0"),
     *                     @OA\Property(property="device_type", type="string", example="desktop")
     *                 )
     *             )
     *         )
     *     )
     * )
     */
    public function getDesktopBrowsers(Request $request)
    {
        return response()->json([
            'browsers' => Browser::getDesktopBrowsersForSelect()
        ]);
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –±—Ä–∞—É–∑–µ—Ä—ã —Å –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–æ–π –ø–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º
     * 
     * @OA\Get(
     *     path="/api/creatives/browsers/grouped",
     *     operationId="getBrowsersGrouped",
     *     tags={"–ö—Ä–µ–∞—Ç–∏–≤—ã - –ë—Ä–∞—É–∑–µ—Ä—ã"},
     *     summary="–ü–æ–ª—É—á–∏—Ç—å –±—Ä–∞—É–∑–µ—Ä—ã —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ —Ç–∏–ø–∞–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤",
     *     description="–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –±—Ä–∞—É–∑–µ—Ä—ã —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –Ω–∞ –≥—Ä—É–ø–ø—ã: desktop, mobile, tablet",
     *     @OA\Response(
     *         response=200,
     *         description="–°–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –±—Ä–∞—É–∑–µ—Ä—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã",
     *         @OA\JsonContent(
     *             @OA\Property(property="browsers", type="object",
     *                 @OA\Property(property="desktop", type="array",
     *                     @OA\Items(
     *                         @OA\Property(property="id", type="integer", example=1),
     *                         @OA\Property(property="name", type="string", example="Chrome"),
     *                         @OA\Property(property="version", type="string", example="120.0")
     *                     )
     *                 ),
     *                 @OA\Property(property="mobile", type="array",
     *                     @OA\Items(
     *                         @OA\Property(property="id", type="integer", example=2),
     *                         @OA\Property(property="name", type="string", example="Chrome Mobile"),
     *                         @OA\Property(property="version", type="string", example="120.0")
     *                     )
     *                 ),
     *                 @OA\Property(property="tablet", type="array",
     *                     @OA\Items(
     *                         @OA\Property(property="id", type="integer", example=3),
     *                         @OA\Property(property="name", type="string", example="Safari"),
     *                         @OA\Property(property="version", type="string", example="17.0")
     *                     )
     *                 )
     *             )
     *         )
     *     )
     * )
     */
    public function getBrowsersGrouped(Request $request)
    {
        return response()->json([
            'browsers' => Browser::getBrowsersGroupedByDevice()
        ]);
    }

    /**
     * –ü–æ–∏—Å–∫ –±—Ä–∞—É–∑–µ—Ä–æ–≤
     * 
     * @OA\Get(
     *     path="/api/creatives/browsers/search",
     *     operationId="searchBrowsers",
     *     tags={"–ö—Ä–µ–∞—Ç–∏–≤—ã - –ë—Ä–∞—É–∑–µ—Ä—ã"},
     *     summary="–ü–æ–∏—Å–∫ –±—Ä–∞—É–∑–µ—Ä–æ–≤ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é",
     *     description="–í—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–∏—Å–∫ –±—Ä–∞—É–∑–µ—Ä–æ–≤ –ø–æ —á–∞—Å—Ç–∏—á–Ω–æ–º—É —Å–æ–≤–ø–∞–¥–µ–Ω–∏—é –Ω–∞–∑–≤–∞–Ω–∏—è",
     *     @OA\Parameter(
     *         name="q",
     *         in="query",
     *         description="–ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å (–º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞)",
     *         required=true,
     *         @OA\Schema(type="string", example="chro", minLength=2)
     *     ),
     *     @OA\Parameter(
     *         name="limit",
     *         in="query",
     *         description="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤",
     *         required=false,
     *         @OA\Schema(type="integer", example=20, minimum=1, maximum=100)
     *     ),
     *     @OA\Response(
     *         response=200,
     *         description="–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –±—Ä–∞—É–∑–µ—Ä–æ–≤",
     *         @OA\JsonContent(
     *             @OA\Property(property="browsers", type="array", 
     *                 @OA\Items(
     *                     @OA\Property(property="id", type="integer", example=1),
     *                     @OA\Property(property="name", type="string", example="Chrome"),
     *                     @OA\Property(property="version", type="string", example="120.0"),
     *                     @OA\Property(property="device_type", type="string", example="desktop"),
     *                     @OA\Property(property="relevance", type="number", format="float", example=0.95)
     *                 )
     *             )
     *         )
     *     ),
     *     @OA\Response(
     *         response=400,
     *         description="–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å",
     *         @OA\JsonContent(
     *             @OA\Property(property="browsers", type="array", @OA\Items())
     *         )
     *     )
     * )
     */
    public function searchBrowsers(Request $request)
    {
        $query = $request->get('q', '');
        $limit = $request->get('limit', 20);

        if (strlen($query) < 2) {
            return response()->json([
                'browsers' => []
            ]);
        }

        return response()->json([
            'browsers' => Browser::searchBrowsers($query, $limit)
        ]);
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±—Ä–∞—É–∑–µ—Ä–æ–≤
     * 
     * @OA\Get(
     *     path="/api/creatives/browsers/stats",
     *     operationId="getBrowserStats",
     *     tags={"–ö—Ä–µ–∞—Ç–∏–≤—ã - –ë—Ä–∞—É–∑–µ—Ä—ã"},
     *     summary="–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±—Ä–∞—É–∑–µ—Ä–æ–≤",
     *     description="–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±—Ä–∞—É–∑–µ—Ä–æ–≤",
     *     @OA\Response(
     *         response=200,
     *         description="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±—Ä–∞—É–∑–µ—Ä–æ–≤ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–∞",
     *         @OA\JsonContent(
     *             @OA\Property(property="stats", type="object",
     *                 @OA\Property(property="total_browsers", type="integer", example=156),
     *                 @OA\Property(property="desktop_count", type="integer", example=89),
     *                 @OA\Property(property="mobile_count", type="integer", example=52),
     *                 @OA\Property(property="tablet_count", type="integer", example=15),
     *                 @OA\Property(property="top_browsers", type="array",
     *                     @OA\Items(
     *                         @OA\Property(property="name", type="string", example="Chrome"),
     *                         @OA\Property(property="usage_percentage", type="number", format="float", example=65.2),
     *                         @OA\Property(property="device_type", type="string", example="desktop")
     *                     )
     *                 ),
     *                 @OA\Property(property="usage_by_device", type="object",
     *                     @OA\Property(property="desktop", type="number", format="float", example=45.3),
     *                     @OA\Property(property="mobile", type="number", format="float", example=38.7),
     *                     @OA\Property(property="tablet", type="number", format="float", example=16.0)
     *                 )
     *             )
     *         )
     *     )
     * )
     */
    public function getBrowserStats(Request $request)
    {
        return response()->json([
            'stats' => Browser::getBrowserUsageStats()
        ]);
    }

    /**
     * –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à –±—Ä–∞—É–∑–µ—Ä–æ–≤
     * 
     * @OA\Delete(
     *     path="/api/creatives/browsers/cache",
     *     operationId="clearBrowsersCache",
     *     tags={"–ö—Ä–µ–∞—Ç–∏–≤—ã - –ë—Ä–∞—É–∑–µ—Ä—ã"},
     *     summary="–û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à –±—Ä–∞—É–∑–µ—Ä–æ–≤",
     *     description="–û—á–∏—â–∞–µ—Ç –∫—ç—à –¥–∞–Ω–Ω—ã—Ö –æ –±—Ä–∞—É–∑–µ—Ä–∞—Ö (—Ç—Ä–µ–±—É–µ—Ç –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)",
     *     security={{"bearerAuth": {}}},
     *     @OA\Response(
     *         response=200,
     *         description="–ö—ç—à –±—Ä–∞—É–∑–µ—Ä–æ–≤ —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω",
     *         @OA\JsonContent(
     *             @OA\Property(property="message", type="string", example="Browser cache cleared successfully")
     *         )
     *     ),
     *     @OA\Response(
     *         response=401,
     *         description="–ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø",
     *         @OA\JsonContent(
     *             @OA\Property(property="error", type="string", example="Unauthorized")
     *         )
     *     ),
     *     @OA\Response(
     *         response=403,
     *         description="–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞",
     *         @OA\JsonContent(
     *             @OA\Property(property="error", type="string", example="Forbidden")
     *         )
     *     )
     * )
     */
    public function clearBrowsersCache(Request $request)
    {
        // –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        Browser::clearBrowsersCache();

        return response()->json([
            'message' => 'Browser cache cleared successfully'
        ]);
    }
}
